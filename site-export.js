(function(){
    'use strict';
    
    let selectedPages = [];
    
    // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–Ω–æ–ø–∫—É –≠–∫—Å–ø–æ—Ä—Ç
    function replaceExportButton() {
        const btn = document.getElementById('btnExport');
        if (!btn) return;
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        const newBtn = btn.cloneNode(true);
        btn.parentNode.replaceChild(newBtn, btn);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        newBtn.addEventListener('click', openExportModal);
    }
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∞
    function createExportModal() {
        if (document.getElementById('exportModalBackdrop')) return;
        
        const backdrop = document.createElement('div');
        backdrop.id = 'exportModalBackdrop';
        backdrop.className = 'export-backdrop hidden';
        
        const modal = document.createElement('div');
        modal.className = 'export-modal';
        
        modal.innerHTML = `
            <div class="export-modal__header">
                <div class="export-modal__title">üì¶ –≠–∫—Å–ø–æ—Ä—Ç —Å–∞–π—Ç–∞</div>
                <button type="button" class="export-close">√ó</button>
            </div>
            <div class="export-modal__body">
                <div class="export-section">
                    <label class="export-label">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞:</label>
                    <div class="export-actions">
                        <button type="button" class="export-btn small" id="exportSelectAll">–í—ã–±—Ä–∞—Ç—å –≤—Å–µ</button>
                        <button type="button" class="export-btn small" id="exportDeselectAll">–°–Ω—è—Ç—å –≤—Å–µ</button>
                    </div>
                    <div class="export-pages" id="exportPagesList">
                        <div style="color:#6b7280">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
                    </div>
                </div>
                
                <div class="export-section">
                    <label class="export-label">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞:</label>
                    <div class="export-settings">
                        <label class="export-checkbox-item">
                            <input type="checkbox" id="exportIncludeApi" class="export-checkbox" checked>
                            <span>–í–∫–ª—é—á–∏—Ç—å API –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</span>
                        </label>
                        <label class="export-checkbox-item">
                            <input type="checkbox" id="exportIncludeTracking" class="export-checkbox">
                            <span>–í–∫–ª—é—á–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Å–µ—â–µ–Ω–∏–π</span>
                        </label>
                    </div>
                </div>
                
                <div class="export-section">
                    <button type="button" class="export-btn primary" id="startExport">üì• –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                    <div id="exportStatus"></div>
                </div>
            </div>
        `;
        
        backdrop.appendChild(modal);
        document.body.appendChild(backdrop);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        modal.querySelector('.export-close').addEventListener('click', closeExportModal);
        backdrop.addEventListener('click', (e) => {
            if (e.target === backdrop) closeExportModal();
        });
        
        document.getElementById('exportSelectAll').addEventListener('click', selectAllPages);
        document.getElementById('exportDeselectAll').addEventListener('click', deselectAllPages);
        document.getElementById('startExport').addEventListener('click', startExport);
    }
    
    function openExportModal() {
        createExportModal();
        loadPagesList();
        document.getElementById('exportModalBackdrop').classList.remove('hidden');
    }
    
    function closeExportModal() {
        document.getElementById('exportModalBackdrop').classList.add('hidden');
    }
    
    async function loadPagesList() {
        try {
            const response = await fetch('/editor/api.php?action=listPages');
            const data = await response.json();
            
            if (data.ok) {
                const container = document.getElementById('exportPagesList');
                container.innerHTML = data.pages.map(page => `
                    <label class="export-page-item">
                        <input type="checkbox" value="${page.id}" class="export-page-check">
                        <span>${page.name}</span>
                    </label>
                `).join('');
                
                container.querySelectorAll('.export-page-check').forEach(cb => {
                    cb.addEventListener('change', updateSelectedPages);
                });
                
                // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                selectAllPages();
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü:', error);
        }
    }
    
    function updateSelectedPages() {
        selectedPages = Array.from(document.querySelectorAll('.export-page-check:checked'))
            .map(cb => cb.value);
    }
    
    function selectAllPages() {
        document.querySelectorAll('.export-page-check').forEach(cb => cb.checked = true);
        updateSelectedPages();
    }
    
    function deselectAllPages() {
        document.querySelectorAll('.export-page-check').forEach(cb => cb.checked = false);
        updateSelectedPages();
    }
    
    async function startExport() {
        if (selectedPages.length === 0) {
            showStatus('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Å—Ç—Ä–∞–Ω–∏—Ü—É', 'error');
            return;
        }
        
        const includeApi = document.getElementById('exportIncludeApi').checked;
        const includeTracking = document.getElementById('exportIncludeTracking').checked;
        
        showStatus('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞...', 'info');
        
        const fd = new FormData();
        fd.append('action', 'exportSite');
        fd.append('pages', JSON.stringify(selectedPages));
        fd.append('includeApi', includeApi ? '1' : '0');
        fd.append('includeTracking', includeTracking ? '1' : '0');
        
        try {
            const response = await fetch('/editor/export_api.php', {
                method: 'POST',
                body: fd
            });
            
            if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
            
            // –°–∫–∞—á–∏–≤–∞–µ–º ZIP —Ñ–∞–π–ª
            const blob = await response.blob();
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `site-export-${Date.now()}.zip`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
            
            showStatus('–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!', 'success');
            setTimeout(closeExportModal, 2000);
        } catch (error) {
            showStatus('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: ' + error.message, 'error');
        }
    }
    
    function showStatus(message, type = 'info') {
        const status = document.getElementById('exportStatus');
        status.className = 'export-status ' + type;
        status.textContent = message;
        status.style.display = 'block';
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    document.addEventListener('DOMContentLoaded', function() {
        setTimeout(replaceExportButton, 100);
    });
})();